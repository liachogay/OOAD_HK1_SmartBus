#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartBus
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SMARTBUS")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBANK(BANK instance);
    partial void UpdateBANK(BANK instance);
    partial void DeleteBANK(BANK instance);
    partial void InsertBUS(BUS instance);
    partial void UpdateBUS(BUS instance);
    partial void DeleteBUS(BUS instance);
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void InsertSTATIONBUS(STATIONBUS instance);
    partial void UpdateSTATIONBUS(STATIONBUS instance);
    partial void DeleteSTATIONBUS(STATIONBUS instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::SmartBus.Properties.Settings.Default.SMARTBUSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BANK> BANKs
		{
			get
			{
				return this.GetTable<BANK>();
			}
		}
		
		public System.Data.Linq.Table<TRACKER> TRACKERs
		{
			get
			{
				return this.GetTable<TRACKER>();
			}
		}
		
		public System.Data.Linq.Table<BUS> BUS
		{
			get
			{
				return this.GetTable<BUS>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<STATIONBUS> STATIONBUS
		{
			get
			{
				return this.GetTable<STATIONBUS>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BANK")]
	public partial class BANK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BANKID;
		
		private int _BANKMONEY;
		
		private EntitySet<CUSTOMER> _CUSTOMERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBANKIDChanging(string value);
    partial void OnBANKIDChanged();
    partial void OnBANKMONEYChanging(int value);
    partial void OnBANKMONEYChanged();
    #endregion
		
		public BANK()
		{
			this._CUSTOMERs = new EntitySet<CUSTOMER>(new Action<CUSTOMER>(this.attach_CUSTOMERs), new Action<CUSTOMER>(this.detach_CUSTOMERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BANKID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BANKID
		{
			get
			{
				return this._BANKID;
			}
			set
			{
				if ((this._BANKID != value))
				{
					this.OnBANKIDChanging(value);
					this.SendPropertyChanging();
					this._BANKID = value;
					this.SendPropertyChanged("BANKID");
					this.OnBANKIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BANKMONEY", DbType="Int NOT NULL")]
		public int BANKMONEY
		{
			get
			{
				return this._BANKMONEY;
			}
			set
			{
				if ((this._BANKMONEY != value))
				{
					this.OnBANKMONEYChanging(value);
					this.SendPropertyChanging();
					this._BANKMONEY = value;
					this.SendPropertyChanged("BANKMONEY");
					this.OnBANKMONEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BANK_CUSTOMER", Storage="_CUSTOMERs", ThisKey="BANKID", OtherKey="BANKID")]
		public EntitySet<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this._CUSTOMERs;
			}
			set
			{
				this._CUSTOMERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUSTOMERs(CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.BANK = this;
		}
		
		private void detach_CUSTOMERs(CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.BANK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRACKER")]
	public partial class TRACKER
	{
		
		private string _USERNAMEID;
		
		private int _NUMBERBUSID;
		
		private int _POSTIONBUSUP;
		
		private int _POSTIONBUSDOWN;
		
		public TRACKER()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAMEID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string USERNAMEID
		{
			get
			{
				return this._USERNAMEID;
			}
			set
			{
				if ((this._USERNAMEID != value))
				{
					this._USERNAMEID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBERBUSID", DbType="Int NOT NULL")]
		public int NUMBERBUSID
		{
			get
			{
				return this._NUMBERBUSID;
			}
			set
			{
				if ((this._NUMBERBUSID != value))
				{
					this._NUMBERBUSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTIONBUSUP", DbType="Int NOT NULL")]
		public int POSTIONBUSUP
		{
			get
			{
				return this._POSTIONBUSUP;
			}
			set
			{
				if ((this._POSTIONBUSUP != value))
				{
					this._POSTIONBUSUP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTIONBUSDOWN", DbType="Int NOT NULL")]
		public int POSTIONBUSDOWN
		{
			get
			{
				return this._POSTIONBUSDOWN;
			}
			set
			{
				if ((this._POSTIONBUSDOWN != value))
				{
					this._POSTIONBUSDOWN = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BUS")]
	public partial class BUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BUSID;
		
		private System.Nullable<int> _NUMBERCHAIRBUS;
		
		private EntitySet<STATIONBUS> _STATIONBUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBUSIDChanging(int value);
    partial void OnBUSIDChanged();
    partial void OnNUMBERCHAIRBUSChanging(System.Nullable<int> value);
    partial void OnNUMBERCHAIRBUSChanged();
    #endregion
		
		public BUS()
		{
			this._STATIONBUS = new EntitySet<STATIONBUS>(new Action<STATIONBUS>(this.attach_STATIONBUS), new Action<STATIONBUS>(this.detach_STATIONBUS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUSID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BUSID
		{
			get
			{
				return this._BUSID;
			}
			set
			{
				if ((this._BUSID != value))
				{
					this.OnBUSIDChanging(value);
					this.SendPropertyChanging();
					this._BUSID = value;
					this.SendPropertyChanged("BUSID");
					this.OnBUSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBERCHAIRBUS", DbType="Int")]
		public System.Nullable<int> NUMBERCHAIRBUS
		{
			get
			{
				return this._NUMBERCHAIRBUS;
			}
			set
			{
				if ((this._NUMBERCHAIRBUS != value))
				{
					this.OnNUMBERCHAIRBUSChanging(value);
					this.SendPropertyChanging();
					this._NUMBERCHAIRBUS = value;
					this.SendPropertyChanged("NUMBERCHAIRBUS");
					this.OnNUMBERCHAIRBUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUS_STATIONBUS", Storage="_STATIONBUS", ThisKey="BUSID", OtherKey="BUSID")]
		public EntitySet<STATIONBUS> STATIONBUS
		{
			get
			{
				return this._STATIONBUS;
			}
			set
			{
				this._STATIONBUS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STATIONBUS(STATIONBUS entity)
		{
			this.SendPropertyChanging();
			entity.BUS = this;
		}
		
		private void detach_STATIONBUS(STATIONBUS entity)
		{
			this.SendPropertyChanging();
			entity.BUS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERID;
		
		private string _PASSWORDID;
		
		private string _NAMECUS;
		
		private int _AGECUS;
		
		private string _BANKID;
		
		private bool _ISSTUDENT;
		
		private EntityRef<BANK> _BANK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERIDChanging(string value);
    partial void OnUSERIDChanged();
    partial void OnPASSWORDIDChanging(string value);
    partial void OnPASSWORDIDChanged();
    partial void OnNAMECUSChanging(string value);
    partial void OnNAMECUSChanged();
    partial void OnAGECUSChanging(int value);
    partial void OnAGECUSChanged();
    partial void OnBANKIDChanging(string value);
    partial void OnBANKIDChanged();
    partial void OnISSTUDENTChanging(bool value);
    partial void OnISSTUDENTChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._BANK = default(EntityRef<BANK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORDID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PASSWORDID
		{
			get
			{
				return this._PASSWORDID;
			}
			set
			{
				if ((this._PASSWORDID != value))
				{
					this.OnPASSWORDIDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORDID = value;
					this.SendPropertyChanged("PASSWORDID");
					this.OnPASSWORDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMECUS", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAMECUS
		{
			get
			{
				return this._NAMECUS;
			}
			set
			{
				if ((this._NAMECUS != value))
				{
					this.OnNAMECUSChanging(value);
					this.SendPropertyChanging();
					this._NAMECUS = value;
					this.SendPropertyChanged("NAMECUS");
					this.OnNAMECUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AGECUS", DbType="Int NOT NULL")]
		public int AGECUS
		{
			get
			{
				return this._AGECUS;
			}
			set
			{
				if ((this._AGECUS != value))
				{
					this.OnAGECUSChanging(value);
					this.SendPropertyChanging();
					this._AGECUS = value;
					this.SendPropertyChanged("AGECUS");
					this.OnAGECUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BANKID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string BANKID
		{
			get
			{
				return this._BANKID;
			}
			set
			{
				if ((this._BANKID != value))
				{
					if (this._BANK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBANKIDChanging(value);
					this.SendPropertyChanging();
					this._BANKID = value;
					this.SendPropertyChanged("BANKID");
					this.OnBANKIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISSTUDENT", DbType="Bit NOT NULL")]
		public bool ISSTUDENT
		{
			get
			{
				return this._ISSTUDENT;
			}
			set
			{
				if ((this._ISSTUDENT != value))
				{
					this.OnISSTUDENTChanging(value);
					this.SendPropertyChanging();
					this._ISSTUDENT = value;
					this.SendPropertyChanged("ISSTUDENT");
					this.OnISSTUDENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BANK_CUSTOMER", Storage="_BANK", ThisKey="BANKID", OtherKey="BANKID", IsForeignKey=true)]
		public BANK BANK
		{
			get
			{
				return this._BANK.Entity;
			}
			set
			{
				BANK previousValue = this._BANK.Entity;
				if (((previousValue != value) 
							|| (this._BANK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BANK.Entity = null;
						previousValue.CUSTOMERs.Remove(this);
					}
					this._BANK.Entity = value;
					if ((value != null))
					{
						value.CUSTOMERs.Add(this);
						this._BANKID = value.BANKID;
					}
					else
					{
						this._BANKID = default(string);
					}
					this.SendPropertyChanged("BANK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STATIONBUS")]
	public partial class STATIONBUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _NUMBERSTATION;
		
		private int _BUSID;
		
		private string _ADDRESSSTATION;
		
		private EntityRef<BUS> _BUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNUMBERSTATIONChanging(decimal value);
    partial void OnNUMBERSTATIONChanged();
    partial void OnBUSIDChanging(int value);
    partial void OnBUSIDChanged();
    partial void OnADDRESSSTATIONChanging(string value);
    partial void OnADDRESSSTATIONChanged();
    #endregion
		
		public STATIONBUS()
		{
			this._BUS = default(EntityRef<BUS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBERSTATION", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal NUMBERSTATION
		{
			get
			{
				return this._NUMBERSTATION;
			}
			set
			{
				if ((this._NUMBERSTATION != value))
				{
					this.OnNUMBERSTATIONChanging(value);
					this.SendPropertyChanging();
					this._NUMBERSTATION = value;
					this.SendPropertyChanged("NUMBERSTATION");
					this.OnNUMBERSTATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUSID", DbType="Int NOT NULL")]
		public int BUSID
		{
			get
			{
				return this._BUSID;
			}
			set
			{
				if ((this._BUSID != value))
				{
					if (this._BUS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBUSIDChanging(value);
					this.SendPropertyChanging();
					this._BUSID = value;
					this.SendPropertyChanged("BUSID");
					this.OnBUSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESSSTATION", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ADDRESSSTATION
		{
			get
			{
				return this._ADDRESSSTATION;
			}
			set
			{
				if ((this._ADDRESSSTATION != value))
				{
					this.OnADDRESSSTATIONChanging(value);
					this.SendPropertyChanging();
					this._ADDRESSSTATION = value;
					this.SendPropertyChanged("ADDRESSSTATION");
					this.OnADDRESSSTATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUS_STATIONBUS", Storage="_BUS", ThisKey="BUSID", OtherKey="BUSID", IsForeignKey=true)]
		public BUS BUS
		{
			get
			{
				return this._BUS.Entity;
			}
			set
			{
				BUS previousValue = this._BUS.Entity;
				if (((previousValue != value) 
							|| (this._BUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUS.Entity = null;
						previousValue.STATIONBUS.Remove(this);
					}
					this._BUS.Entity = value;
					if ((value != null))
					{
						value.STATIONBUS.Add(this);
						this._BUSID = value.BUSID;
					}
					else
					{
						this._BUSID = default(int);
					}
					this.SendPropertyChanged("BUS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
